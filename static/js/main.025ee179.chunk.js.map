{"version":3,"sources":["search/index.js","App.js","serviceWorker.js","index.js"],"names":["laws","require","fuzzyMatchPhrase","strA","strB","termFreqA","termFreqMap","termFreqB","dict","addKeysToDict","vecA","vecB","termFreqVecA","termFreqMapToVector","termFreqVecB","product","i","length","vecDotProduct","vecMagnitude","str","words","split","termFreq","forEach","w","map","key","termFreqVector","term","push","vec","sum","Math","sqrt","App","state","text","maxDelta","location","threshold","distance","results","event","this","setState","target","value","individualWords","checked","opts","law","score","toLowerCase","sort","join","Desc","a","b","fuzzyMatch","Number","res","r","style","marginVertical","Chapter","Section","round","margin","marginBottom","type","onChange","handleChange","bind","width","marginLeft","handleDeltaChange","handleLocationChange","handleThresholdChange","handleDistanceChange","onClick","search","renderResults","React","Component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6vkEACMA,G,MAAOC,EAAQ,KAkDd,SAASC,EAAiBC,EAAMC,GACrC,IAAIC,EAAYC,EAAYH,GACxBI,EAAYD,EAAYF,GAExBI,EAAO,GACXC,EAAcJ,EAAWG,GACzBC,EAAcF,EAAWC,GAEzB,IA6CwBE,EAAMC,EA7C1BC,EAAeC,EAAoBR,EAAWG,GAC9CM,EAAeD,EAAoBN,EAAWC,GAElD,OA0BF,SAAuBE,EAAMC,GAE3B,IADA,IAAII,EAAU,EACLC,EAAI,EAAGA,EAAIN,EAAKO,OAAQD,IAC7BD,GAAWL,EAAKM,GAAKL,EAAKK,GAE9B,OAAOD,EAYAG,CADiBR,EA1CAE,EA0CMD,EA1CQG,IA2CFK,EAAaT,GAAQS,EAAaR,IAxCxE,SAASL,EAAYc,GACnB,IAAIC,EAAQD,EAAIE,MAAM,KAClBC,EAAW,GAIf,OAHAF,EAAMG,SAAQ,SAASC,GACnBF,EAASE,IAAMF,EAASE,IAAM,GAAK,KAEhCF,EAGT,SAASd,EAAciB,EAAKlB,GAC1B,IAAK,IAAImB,KAAOD,EACZlB,EAAKmB,IAAO,EAIlB,SAASd,EAAoBa,EAAKlB,GAChC,IAAIoB,EAAiB,GACrB,IAAK,IAAIC,KAAQrB,EACboB,EAAeE,KAAKJ,EAAIG,IAAS,GAErC,OAAOD,EAWT,SAAST,EAAaY,GAEpB,IADA,IAAIC,EAAM,EACDhB,EAAI,EAAGA,EAAIe,EAAId,OAAQD,IAC5BgB,GAAOD,EAAIf,GAAKe,EAAIf,GAExB,OAAOiB,KAAKC,KAAKF,G,ICjGEG,E,4MAEnBC,MAAQ,CACNC,KAAM,GACNC,SAAU,OACVC,SAAU,KACVC,UAAW,MACXC,SAAU,MACVC,QAAS,I,2DAGEC,GACXC,KAAKC,SAAS,CAAER,KAAMM,EAAMG,OAAOC,U,wCAGnBJ,GAChBC,KAAKC,SAAS,CAAEP,SAAUK,EAAMG,OAAOC,U,2CAGpBJ,GACnBC,KAAKC,SAAS,CAAEN,SAAUI,EAAMG,OAAOC,U,4CAGnBJ,GACpBC,KAAKC,SAAS,CAAEL,UAAWG,EAAMG,OAAOC,U,2CAGrBJ,GACnBC,KAAKC,SAAS,CAAEJ,SAAUE,EAAMG,OAAOC,U,kDAGbJ,GAC1BC,KAAKC,SAAS,CAAEG,gBAAiBL,EAAMG,OAAOG,Y,+BAI9C,IAAMP,EDDH,SAAoBL,EAAMa,GAC/B,IADqC,EAC/BR,EAAU,GADqB,cAEnB1C,GAFmB,IAErC,2BAAwB,CAAC,IAAdmD,EAAa,QACtBT,EAAQZ,KAAR,2BACKqB,GADL,IAEEC,MAAOlD,EAAiBmC,EAAKgB,cAAc/B,MAAM,KAAKgC,OAAOC,KAAK,KAAMJ,EAAIK,KAAKH,cAAc/B,MAAM,KAAKgC,OAAOC,KAAK,UALrF,8BASrC,OAAOb,EAAQY,MAAK,SAACG,EAAGC,GAAJ,OAAUA,EAAEN,MAAQK,EAAEL,SCRxBO,CAAWf,KAAKR,MAAMC,MACzBuB,OAAOhB,KAAKR,MAAME,UACnBsB,OAAOhB,KAAKR,MAAMG,UACjBqB,OAAOhB,KAAKR,MAAMI,WACnBoB,OAAOhB,KAAKR,MAAMK,YAE9BG,KAAKC,SAAS,CAAEH,QAASA,M,sCAIzB,OAAOE,KAAKR,MAAMM,QAAQhB,KAAI,SAACmC,EAAK7C,GAElC,IAAM8C,EAAID,EACV,OAAO,yBAAKE,MAAO,CAAEC,eAAgB,KACnC,4BAAKF,EAAEG,QAAP,IAAiBH,EAAEI,QAAnB,IAA6BJ,EAAEN,MAC/B,uCAAaM,EAAE,YACf,uCAAaA,EAAE,YACf,uCAAaA,EAAE,YAEf,6CAAmB7B,KAAKkC,MAAkB,IAAZN,EAAIT,MAAc,KAAO,IAAvD,W,+BAMJ,OACE,yBAAKW,MAAO,CAAEK,OAAQ,KACpB,yBAAKL,MAAO,CAAEM,aAAc,KAC1B,6CACc,IACZ,2BAAOC,KAAK,OAAOvB,MAAOH,KAAKR,MAAMC,KAAMkC,SAAU3B,KAAK4B,aAAaC,KAAK7B,MAAOmB,MAAO,CAAEW,MAAO,QAErG,2BAAOX,MAAO,CAAEY,WAAY,KAA5B,iCACiC,IAC/B,2BAAOL,KAAK,OAAOvB,MAAOH,KAAKR,MAAME,SAAUiC,SAAU3B,KAAKgC,kBAAkBH,KAAK7B,MAAOmB,MAAO,CAAEW,MAAO,OAE9G,2BAAOX,MAAO,CAAEY,WAAY,KAA5B,YACY,IACV,2BAAOL,KAAK,OAAOvB,MAAOH,KAAKR,MAAMG,SAAUgC,SAAU3B,KAAKiC,qBAAqBJ,KAAK7B,MAAOmB,MAAO,CAAEW,MAAO,OAEjH,2BAAOX,MAAO,CAAEY,WAAY,KAA5B,aACa,IACX,2BAAOL,KAAK,OAAOvB,MAAOH,KAAKR,MAAMI,UAAW+B,SAAU3B,KAAKkC,sBAAsBL,KAAK7B,MAAOmB,MAAO,CAAEW,MAAO,OAEnH,2BAAOX,MAAO,CAAEY,WAAY,KAA5B,YACY,IACV,2BAAOL,KAAK,OAAOvB,MAAOH,KAAKR,MAAMK,SAAU8B,SAAU3B,KAAKmC,qBAAqBN,KAAK7B,MAAOmB,MAAO,CAAEW,MAAO,OAEjH,4BAAQX,MAAO,CAAEY,WAAY,IAAMK,QAASpC,KAAKqC,OAAOR,KAAK7B,OAA7D,WAIF,6BACGA,KAAKsC,sB,GAzFiBC,IAAMC,WCQnBC,QACW,cAA7BC,OAAO/C,SAASgD,UAEe,UAA7BD,OAAO/C,SAASgD,UAEhBD,OAAO/C,SAASgD,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.025ee179.chunk.js","sourcesContent":["import Fuse from 'fuse.js'\nconst laws = require('./laws.json')\n\n// export function fuzzyMatch(text, opts) {\n//   const options = {\n//     includeScore: true,\n//     isCaseSensitive: false,\n//     keys: ['Desc'],\n//     MAX_DELTA: 0.25,\n//     location: 25,\n//     threshold: 0.6,\n//     distance: 100,\n//     ...opts,\n//   };\n\n//   const fuse = new Fuse(laws, options)\n\n//   const results = fuse.search(text)\n\n//   if (results.length === 0) {\n//     return results;\n//   }\n\n//   var score1 = 0;\n//   var score2 = 0;\n//   for (var i = 1; i < results.length; i++) {\n//     score1 = results[0].score;\n//     score2 = results[i].score;\n//     let delta = Math.abs(score1 - score2);\n\n//     if (delta > options.MAX_DELTA) {\n//       results.splice(i);\n//       i--;\n//     }\n//   }\n\n//   return results;\n// }\n\nexport function fuzzyMatch(text, opts) {\n  const results = [];\n  for (const law of laws) {\n    results.push({\n      ...law,\n      score: fuzzyMatchPhrase(text.toLowerCase().split(' ').sort().join(' '), law.Desc.toLowerCase().split(' ').sort().join(' '))\n    })\n  }\n\n  return results.sort((a, b) => b.score - a.score)\n}\n\nexport function fuzzyMatchPhrase(strA, strB) {\n  var termFreqA = termFreqMap(strA);\n  var termFreqB = termFreqMap(strB);\n\n  var dict = {};\n  addKeysToDict(termFreqA, dict);\n  addKeysToDict(termFreqB, dict);\n\n  var termFreqVecA = termFreqMapToVector(termFreqA, dict);\n  var termFreqVecB = termFreqMapToVector(termFreqB, dict);\n\n  return cosineSimilarity(termFreqVecA, termFreqVecB);\n}\n\nfunction termFreqMap(str) {\n  var words = str.split(' ');\n  var termFreq = {};\n  words.forEach(function(w) {\n      termFreq[w] = (termFreq[w] || 0) + 1;\n  });\n  return termFreq;\n}\n\nfunction addKeysToDict(map, dict) {\n  for (var key in map) {\n      dict[key] = true;\n  }\n}\n\nfunction termFreqMapToVector(map, dict) {\n  var termFreqVector = [];\n  for (var term in dict) {\n      termFreqVector.push(map[term] || 0);\n  }\n  return termFreqVector;\n}\n\nfunction vecDotProduct(vecA, vecB) {\n  var product = 0;\n  for (var i = 0; i < vecA.length; i++) {\n      product += vecA[i] * vecB[i];\n  }\n  return product;\n}\n\nfunction vecMagnitude(vec) {\n  var sum = 0;\n  for (var i = 0; i < vec.length; i++) {\n      sum += vec[i] * vec[i];\n  }\n  return Math.sqrt(sum);\n}\n\nfunction cosineSimilarity(vecA, vecB) {\n  return vecDotProduct(vecA, vecB) / (vecMagnitude(vecA) * vecMagnitude(vecB));\n}\n","import React from 'react';\nimport './App.css';\nimport { fuzzyMatch } from './search'\n\nexport default class App extends React.Component {\n\n  state = {\n    text: '',\n    maxDelta: '0.25',\n    location: '25',\n    threshold: '0.6',\n    distance: '100',\n    results: [],\n  }\n\n  handleChange(event) {\n    this.setState({ text: event.target.value });\n  }\n\n  handleDeltaChange(event) {\n    this.setState({ maxDelta: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleThresholdChange(event) {\n    this.setState({ threshold: event.target.value });\n  }\n\n  handleDistanceChange(event) {\n    this.setState({ distance: event.target.value });\n  }\n\n  handleIndividualWordsChange(event) {\n    this.setState({ individualWords: event.target.checked });\n  }\n\n  search() {\n    const results = fuzzyMatch(this.state.text, {\n      MAX_DELTA: Number(this.state.maxDelta),\n      location: Number(this.state.location),\n      threshold: Number(this.state.threshold),\n      distance: Number(this.state.distance),\n    });\n    this.setState({ results: results });\n  }\n\n  renderResults() {\n    return this.state.results.map((res, i) => {\n      // const r = res.item;\n      const r = res;\n      return <div style={{ marginVertical: 16 }}>\n        <h4>{r.Chapter}:{r.Section} {r.Desc}</h4>\n        <p>1st Off: {r[\"1ST Of.\"]}</p>\n        <p>2nd Off: {r[\"2ND Of.\"]}</p>\n        <p>3rd Off: {r[\"3RD Of.\"]}</p>\n        {/* <p>Percent Match: {Math.round((1 - res.score) * 100 * 100) / 100}%</p> */}\n        <p>Percent Match: {Math.round(res.score * 100 * 100) / 100}%</p>\n      </div>\n    })\n  }\n\n  render() {\n    return (\n      <div style={{ margin: 24 }}>\n        <div style={{ marginBottom: 16 }}>\n          <label>\n            Query Text:{' '}\n            <input type=\"text\" value={this.state.text} onChange={this.handleChange.bind(this)} style={{ width: 300 }} />\n          </label>\n          <label style={{ marginLeft: 16 }}>\n            Maximum Delta between results:{' '}\n            <input type=\"text\" value={this.state.maxDelta} onChange={this.handleDeltaChange.bind(this)} style={{ width: 50 }} />\n          </label>\n          <label style={{ marginLeft: 16 }}>\n            Location:{' '}\n            <input type=\"text\" value={this.state.location} onChange={this.handleLocationChange.bind(this)} style={{ width: 50 }} />\n          </label>\n          <label style={{ marginLeft: 16 }}>\n            Threshold:{' '}\n            <input type=\"text\" value={this.state.threshold} onChange={this.handleThresholdChange.bind(this)} style={{ width: 50 }} />\n          </label>\n          <label style={{ marginLeft: 16 }}>\n            Distance:{' '}\n            <input type=\"text\" value={this.state.distance} onChange={this.handleDistanceChange.bind(this)} style={{ width: 50 }} />\n          </label>\n          <button style={{ marginLeft: 16 }} onClick={this.search.bind(this)}>\n            Search\n          </button>\n        </div>\n        <div>\n          {this.renderResults()}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}