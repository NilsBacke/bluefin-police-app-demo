{"version":3,"sources":["search/index.js","App.js","serviceWorker.js","index.js"],"names":["laws","require","fuzzyMatch","text","individualWords","opts","options","includeScore","isCaseSensitive","keys","MAX_DELTA","location","threshold","distance","fuse","Fuse","results","search","length","score1","score2","i","score","Math","abs","splice","oldFuzzyMatch","words","split","cumulativeResults","wordResults","fuzzyMatchWord","push","console","log","uniqResults","oneWordResults","res","findIndex","r","item","Desc","timesSeen","avgScore","totalScore","uniqResIndex","sort","a","b","word","maxDelta","App","state","event","this","setState","target","value","checked","Number","map","style","marginVertical","Chapter","Section","round","margin","marginBottom","type","onChange","handleChange","bind","width","marginLeft","handleDeltaChange","handleLocationChange","handleThresholdChange","handleDistanceChange","handleIndividualWordsChange","onClick","renderResults","React","Component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1f75ee71.chunk.js","sourcesContent":["import Fuse from 'fuse.js'\nconst laws = require('./laws.json')\n\nexport function fuzzyMatch(text, individualWords, opts) {\n  const options = {\n    includeScore: true,\n    isCaseSensitive: false,\n    keys: ['Desc'],\n    MAX_DELTA: 0.25,\n    location: 25,\n    threshold: 0.6,\n    distance: 100,\n    ...opts,\n  };\n\n  const fuse = new Fuse(laws, options)\n\n  if (!individualWords) {\n    return oldFuzzyMatch(text, fuse, options.MAX_DELTA);\n  }\n\n  const words = text.split(\" \");\n  const cumulativeResults = [];\n  for (const word of words) {\n    const wordResults = fuzzyMatchWord(word, fuse, options.MAX_DELTA)\n    cumulativeResults.push(wordResults)\n  }\n\n  console.log(cumulativeResults)\n\n  const uniqResults = [];\n  for (const oneWordResults of cumulativeResults) {\n    for (const res of oneWordResults) {\n      if (uniqResults.findIndex((r) => res.item.Desc === r.item.Desc) === -1) {\n        uniqResults.push({\n          timesSeen: 0,\n          avgScore: 0,\n          totalScore: 0,\n          ...res,\n        })\n      }\n    }\n  }\n\n  for (const oneWordResults of cumulativeResults) {\n    for (const res of oneWordResults) {\n      const uniqResIndex = uniqResults.findIndex((r) => r.item.Desc === res.item.Desc)\n      uniqResults[uniqResIndex].timesSeen += 1;\n      uniqResults[uniqResIndex].totalScore += res.score;\n    }\n  }\n\n  // calculate averages\n  for (let i = 0; i < uniqResults.length; i++) {\n    if (uniqResults[i].timesSeen < words.length - 1) {\n      uniqResults.splice(i)\n      i--;\n      continue\n    }\n    uniqResults[i].avgScore = uniqResults[i].totalScore / uniqResults[i].timesSeen\n  }\n\n  return uniqResults.sort((a, b) => (a.avgScore > b.avgScore) ? 1 : -1);\n}\n\nfunction fuzzyMatchWord(word, fuse, maxDelta) {\n  const results = fuse.search(word)\n\n  if (results.length === 0) {\n    return results;\n  }\n\n  var score1 = 0;\n  var score2 = 0;\n  for (var i = 1; i < results.length; i++) {\n    score1 = results[0].score;\n    score2 = results[i].score;\n    let delta = Math.abs(score1 - score2);\n\n    if (delta > maxDelta) {\n      results.splice(i);\n      i--;\n    }\n  }\n\n  return results;\n}\n\nfunction oldFuzzyMatch(text, fuse, MAX_DELTA) {\n  const results = fuse.search(text)\n\n  if (results.length === 0) {\n    return results;\n  }\n\n  var score1 = 0;\n  var score2 = 0;\n  for (var i = 1; i < results.length; i++) {\n    score1 = results[0].score;\n    score2 = results[i].score;\n    let delta = Math.abs(score1 - score2);\n\n    if (delta > MAX_DELTA) {\n      results.splice(i);\n      i--;\n    }\n  }\n\n  return results;\n}\n","import React from 'react';\nimport './App.css';\nimport { fuzzyMatch } from './search'\n\nexport default class App extends React.Component {\n\n  state = {\n    text: '',\n    maxDelta: '0.25',\n    location: '25',\n    threshold: '0.6',\n    distance: '100',\n    individualWords: true,\n    results: [],\n  }\n\n  handleChange(event) {\n    this.setState({ text: event.target.value });\n  }\n\n  handleDeltaChange(event) {\n    this.setState({ maxDelta: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value });\n  }\n\n  handleThresholdChange(event) {\n    this.setState({ threshold: event.target.value });\n  }\n\n  handleDistanceChange(event) {\n    this.setState({ distance: event.target.value });\n  }\n\n  handleIndividualWordsChange(event) {\n    this.setState({ individualWords: event.target.checked });\n  }\n\n  search() {\n    const results = fuzzyMatch(this.state.text, this.state.individualWords, {\n      MAX_DELTA: Number(this.state.maxDelta),\n      location: Number(this.state.location),\n      threshold: Number(this.state.threshold),\n      distance: Number(this.state.distance),\n    });\n    this.setState({ results: results });\n  }\n\n  renderResults() {\n    return this.state.results.map((res, i) => {\n      const r = res.item;\n      return <div style={{ marginVertical: 16 }}>\n        <h4>{r.Chapter}:{r.Section} {r.Desc}</h4>\n        <p>1st Off: {r[\"1ST Of.\"]}</p>\n        <p>2nd Off: {r[\"2ND Of.\"]}</p>\n        <p>3rd Off: {r[\"3RD Of.\"]}</p>\n        <p>Percent Match: {Math.round((1 - res.avgScore) * 100 * 100) / 100}%</p>\n      </div>\n    })\n  }\n\n  render() {\n    return (\n      <div style={{ margin: 24 }}>\n        <div style={{ marginBottom: 16 }}>\n          <label>\n            Query Text:{' '}\n            <input type=\"text\" value={this.state.text} onChange={this.handleChange.bind(this)} style={{ width: 300 }} />\n          </label>\n          <label style={{ marginLeft: 16 }}>\n            Maximum Delta between results:{' '}\n            <input type=\"text\" value={this.state.maxDelta} onChange={this.handleDeltaChange.bind(this)} style={{ width: 50 }} />\n          </label>\n          <label style={{ marginLeft: 16 }}>\n            Location:{' '}\n            <input type=\"text\" value={this.state.location} onChange={this.handleLocationChange.bind(this)} style={{ width: 50 }} />\n          </label>\n          <label style={{ marginLeft: 16 }}>\n            Threshold:{' '}\n            <input type=\"text\" value={this.state.threshold} onChange={this.handleThresholdChange.bind(this)} style={{ width: 50 }} />\n          </label>\n          <label style={{ marginLeft: 16 }}>\n            Distance:{' '}\n            <input type=\"text\" value={this.state.distance} onChange={this.handleDistanceChange.bind(this)} style={{ width: 50 }} />\n          </label>\n          <label style={{ marginLeft: 16 }}>\n            Fuzzy match individual words:{' '}\n            <input type=\"checkbox\" checked={this.state.individualWords} onChange={this.handleIndividualWordsChange.bind(this)} />\n          </label>\n          <button style={{ marginLeft: 16 }} onClick={this.search.bind(this)}>\n            Search\n          </button>\n        </div>\n        <div>\n          {this.renderResults()}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}