{"version":3,"sources":["search/index.js","App.js","serviceWorker.js","index.js"],"names":["laws","require","fuzzyMatch","text","results","keywords","map","l","w","toLowerCase","filter","item","i","indexOf","buildKeywords","includedKeywords","words","split","word","includes","push","console","log","lawsToSearch","kword","concat","law","score","fuzzyMatchPhrase","sort","join","Desc","a","b","strA","strB","termFreqA","termFreqMap","termFreqB","dict","addKeysToDict","vecA","vecB","termFreqVecA","termFreqMapToVector","termFreqVecB","product","length","vecDotProduct","vecMagnitude","str","termFreq","forEach","key","termFreqVector","term","vec","sum","Math","sqrt","App","state","event","this","setState","target","value","res","r","style","marginVertical","Chapter","Section","round","margin","marginBottom","type","onChange","handleChange","bind","width","marginLeft","onClick","search","renderResults","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.24692a39.chunk.js","sourcesContent":["const laws = require('./laws.json')\n\nfunction buildKeywords() {\n  const keywords = [\n    ...laws.map((l) => l[\"Key Word\"]),\n    ...laws.map((l) => l[\"Direct Object\"]),\n    ...laws.map((l) => l[\"Verb\"]),\n  ].map((w) => w.toLowerCase());\n  return keywords.filter((item, i) => keywords.indexOf(item) === i)\n}\n\nexport function fuzzyMatch(text) {\n  const results = [];\n  const keywords = buildKeywords();\n\n  // check if text contains a keyword\n  const includedKeywords = [];\n  const words = text.split(' ');\n  for (const word of words) {\n    if (keywords.includes(word.toLowerCase())) {\n      includedKeywords.push(word.toLowerCase());\n    }\n  }\n\n  console.log(includedKeywords)\n\n  let lawsToSearch = laws;\n\n  for (const kword of includedKeywords) {\n    lawsToSearch = lawsToSearch.concat(laws.filter((l) => l[\"Verb\"].toLowerCase() === kword.toLowerCase() ||\n      l[\"Direct Object\"].toLowerCase() === kword.toLowerCase() ||\n      l[\"Key Word\"].toLowerCase() === kword.toLowerCase())).filter((item, i) => lawsToSearch.indexOf(item) === i)\n  }\n\n  for (const law of lawsToSearch) {\n    results.push({\n      ...law,\n      score: fuzzyMatchPhrase(text.toLowerCase().split(' ').sort().join(' '), law.Desc.toLowerCase().split(' ').sort().join(' '))\n    })\n  }\n\n  return results.filter((a) => a.score !== 0).sort((a, b) => b.score - a.score)\n}\n\nexport function fuzzyMatchPhrase(strA, strB) {\n  var termFreqA = termFreqMap(strA);\n  var termFreqB = termFreqMap(strB);\n\n  var dict = {};\n  addKeysToDict(termFreqA, dict);\n  addKeysToDict(termFreqB, dict);\n\n  var termFreqVecA = termFreqMapToVector(termFreqA, dict);\n  var termFreqVecB = termFreqMapToVector(termFreqB, dict);\n\n  return cosineSimilarity(termFreqVecA, termFreqVecB);\n}\n\nfunction termFreqMap(str) {\n  var words = str.split(' ');\n  var termFreq = {};\n  words.forEach(function (w) {\n    termFreq[w] = (termFreq[w] || 0) + 1;\n  });\n  return termFreq;\n}\n\nfunction addKeysToDict(map, dict) {\n  for (var key in map) {\n    dict[key] = true;\n  }\n}\n\nfunction termFreqMapToVector(map, dict) {\n  var termFreqVector = [];\n  for (var term in dict) {\n    termFreqVector.push(map[term] || 0);\n  }\n  return termFreqVector;\n}\n\nfunction vecDotProduct(vecA, vecB) {\n  var product = 0;\n  for (var i = 0; i < vecA.length; i++) {\n    product += vecA[i] * vecB[i];\n  }\n  return product;\n}\n\nfunction vecMagnitude(vec) {\n  var sum = 0;\n  for (var i = 0; i < vec.length; i++) {\n    sum += vec[i] * vec[i];\n  }\n  return Math.sqrt(sum);\n}\n\nfunction cosineSimilarity(vecA, vecB) {\n  return vecDotProduct(vecA, vecB) / (vecMagnitude(vecA) * vecMagnitude(vecB));\n}\n","import React from 'react';\nimport './App.css';\nimport { fuzzyMatch } from './search'\n\nexport default class App extends React.Component {\n\n  state = {\n    text: '',\n    results: [],\n  }\n\n  handleChange(event) {\n    this.setState({ text: event.target.value });\n  }\n\n  search() {\n    const results = fuzzyMatch(this.state.text);\n    this.setState({ results: results });\n  }\n\n  renderResults() {\n    return this.state.results.map((res, i) => {\n      const r = res;\n      return <div style={{ marginVertical: 16 }}>\n        <h3># {i + 1}</h3>\n        <h4>{r.Chapter}:{r.Section} {r.Desc}</h4>\n        <p>1st Off: {r[\"1ST Of.\"]}</p>\n        <p>2nd Off: {r[\"2ND Of.\"]}</p>\n        <p>3rd Off: {r[\"3RD Of.\"]}</p>\n        <p>Percent Match: {Math.round(res.score * 100 * 100) / 100}%</p>\n      </div>\n    })\n  }\n\n  render() {\n    return (\n      <div style={{ margin: 24 }}>\n        <div style={{ marginBottom: 16 }}>\n          <label>\n            Query Text:{' '}\n            <input type=\"text\" value={this.state.text} onChange={this.handleChange.bind(this)} style={{ width: 300 }} />\n          </label>\n          <button style={{ marginLeft: 16 }} onClick={this.search.bind(this)}>\n            Search\n          </button>\n        </div>\n        <div>\n          {this.renderResults()}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}